<%#
komodo tool: tabstop
====================
auto_abbreviation: false
indent_relative: true
is_clean: true
keyboard_shortcut: Ctrl+Alt+Shift+T
language: Komodo Snippet
set_selection: false
treat_as_ejs: true
type: snippet
version: 1.1.5
====================%>
<%
/** Insert literal '[[%tabstop:]]' to snippet file
 *  Use selected text as value of tabstop
 *
 *
 */

var placeholder_text = 'tabstop_PLACEHOLDER'

var tabstop_inactive = '[[% '+placeholder_text+']]';

var selected_text = ko.views.manager.currentView.scimoz.selText;


/** insertNestedSnippet
 */
var insertNestedSnippet = (function()
{
	/** select 'TABSTOP_PLACEHOLDER' in snippet file for replace with var tabstop_snippet
	 */
	var selectTabstopPlaceholder = function()
	{
		var scimoz	= ko.views.manager.currentView.scimoz;
		var tabstops_snippet_match	= new RegExp(/TABSTOP_PLACEHOLDER/gi).exec( require("ko/editor").getValue() );
		if( ! tabstops_snippet_match )
			return;

		scimoz.currentPos	= tabstops_snippet_match.index -1;
		scimoz.anchor	= tabstops_snippet_match.index + placeholder_text.length;
	};


	/** Insert secondary snippet
	 */
	var insertTabstopSnippet = function(selected_text)
	{


		var tabstop_fake_snippet = {
			hasAttribute: function(name) {
				return name in this;
			},
			getStringAttribute: function(name) {
				return this[name];
			},
			indent_relative: "true",
			value:	"tabstop:[[%tabstop:"+selected_text+"]]"
		};

		ko.projects.snippetInsert(tabstop_fake_snippet);
	};

	setTimeout( function()
	{
		selectTabstopPlaceholder();

		setTimeout( function()
		{
			insertTabstopSnippet(selected_text);

		}, 100);
	}, 100);
});

ko.views.manager.currentView.scimoz.beginUndoAction()

try
{

%><%=tabstop_inactive%><%

	insertNestedSnippet();

} finally {
	ko.views.manager.currentView.scimoz.endUndoAction()
}
%>!@#_currentPos!@#_anchor