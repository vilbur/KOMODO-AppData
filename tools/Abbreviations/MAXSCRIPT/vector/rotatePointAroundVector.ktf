// komodo tool: rotatePointAroundVector
// ====================================
// auto_abbreviation: false
// indent_relative: true
// is_clean: true
// language: Text
// set_selection: false
// treat_as_ejs: false
// type: snippet
// version: 1.1.5
// ====================================

/* 
  Get point on a circle in 3D and rotate it around the normal axis
  center: Point3 - center of circle
  normal: Point3 - normal to the circle plane (rotation axis)
  radius: float - radius of the circle
  angle_deg: float - rotation angle in degrees
*/
function getRotatedPointOnCircle center normal radius angle_deg =
(
	-- Normalize normal vector
	n = normalize normal
	
	-- Get arbitrary vector not parallel to n
	ref = if abs (dot n [1,0,0]) < 0.99 then [1,0,0] else [0,1,0]
	
	-- First orthogonal vector in plane
	v1 = normalize (cross n ref)
	
	-- Second orthogonal vector in plane
	v2 = normalize (cross n v1)
	
	-- Convert angle to radians
	angle_rad = angle_deg * pi / 180.0
	
	-- Compute rotated point on circle
	p = center + (cos angle_deg) * v1 * radius + (sin angle_deg) * v2 * radius
	
	p -- return
)

pt = getRotatedPointOnCircle [0,0,0] [0,0,1] 10 45
format "Rotated point: %\n" pt
!@#_currentPos!@#_anchor